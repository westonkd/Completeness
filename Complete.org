#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)

#+TITLE: Completeness: 3COLOR
#+AUTHOR: Weston Dransfield

* Description

#+BEGIN_LaTex
\textbf{\textit{3COLOR}} = \{\(\langle G \rangle\) | the nodes of G can be colored with three colors such that no two adjacent nodes are the same color \}
#+END_LaTeX

* Example
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=7cm]{uncolored.jpg}
\end{center}
#+END_LaTeX

* Example
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=7cm]{colored.png}
\end{center}
#+END_LaTeX


* The Problem
#+BEGIN_LaTeX
Is a given graph \(G\) a member of the \textbf{\textit{3COLOR}}?

\begin{itemize}
\item<2-> This is tough to decide, but easy to verify!
\end{itemize}
#+END_LaTeX

* The Verifier
#+BEGIN_LaTeX
\(V\) = "On input \(\langle G, c \rangle\),
\begin{enumerate}
\item<1-> Check that c includes 3 colors.
\item<2-> Color each node of G as specified by c.
\item<3-> For each node, check that each adjacent node is not the same color.
\item<4-> If all checks pass accept, otherwise reject."
\end{enumerate}

\begin{itemize}
\item<5->Step 3 has largest time complexity of \(O(n^2)\). 3COLOR is in NP because it can be verified in polynomial time.
\end{itemize}
#+END_LaTex


* Constructing the Reduction
#+BEGIN_LaTex
Construct a transformation \(T\) from \(3SAT\) to \(3COLOR\).
\begin{enumerate}
\item<2-> Establish Truthiness
\item<3-> Force variables to be true or false
\item<4-> Use these subgraphs to create a graph that is 3 colorable iff variables are satisfiable
\end{enumerate}
#+END_LaTeX

* Constructing the Reduction - Truthiness
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=7cm]{Truthiness.png}
\end{center}
#+END_LaTeX

* Constructing the Reduction - Variables
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=7cm]{Variable1.png}
\end{center}
#+END_LaTeX

* Constructing the Reduction - Variables
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=7cm]{Variable2.png}
\end{center}
#+END_LaTeX

* Constructing the Reduction - OR
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=7cm]{Or1.png}
\end{center}

\[x\vee y\]
#+END_LaTeX

* Constructing the Reduction - OR
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=10cm]{Or2.png}
\end{center}

#+END_LaTeX

* Constructing the Reduction - Clause
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=10cm]{Comb1.png}
\end{center}

#+END_LaTeX

* Constructing the Reduction - Clause
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=10cm]{Comb2.png}
\end{center}

#+END_LaTeX

* 
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=12cm]{bats.png}
\end{center}
#+END_LaTeX

* Transformation
#+BEGIN_LaTeX
\(T\) = "On input \(\langle S \rangle\),
\begin{enumerate}
\item<1-> Construct the truthiness subgraph \(T\)\\
\item<2-> For each clause in \(S\) add a 3 way OR gate subgraph \(O_i\)\\
\item<3-> Connect the "output" node of \(O_i\) to both the "false" and "unused" nodes of \(T\)
\item<4-> For each variable in the \(S\):
\end{enumerate}
\begin{itemize}
\item<5-> Add nodes \(v\) and \(v_0\) connected by an edge
\item<6-> Connect nodes \(v\) and \(v_0\) to the "unused" end of \(t\)
\item<7-> Connect node \(v_0\) to one input of the clause's 3 way OR gate \(O_i\)"
\end{itemize}
#+END_LaTeX

* Example
#+BEGIN_LaTeX
\[
(u \vee \neg v \vee w) \wedge (v \vee x \vee \neg y)
\]
#+END_LaTeX

* Transformation - Forward
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=8cm]{Comb2.png}
\end{center}


#+END_LaTeX

* Transformation - Backward
#+BEGIN_LaTeX
\begin{center}
\includegraphics[width=8cm]{Comb2.png}
\end{center}


#+END_LaTeX

* Transformation - Polynomial Time
#+BEGIN_LaTeX
\begin{itemize}
\item<1-> Truthiness nodes - \(O(1)\)
\item<2-> Variable T/F nodes - \(O(1)\)
\item<3-> \(O(n)\) for \(n\) clauses
\item<4-> Overall - \(O(n)\)
\end{itemize}
#+END_LaTeX

* Sources
[[http://web.stanford.edu/class/archive/cs/cs103/cs103.1132/lectures/27/Small27.pdf]]
[[http://www.cs.princeton.edu/courses/archive/spring07/cos226/lectures/23Reductions.pdf]]
